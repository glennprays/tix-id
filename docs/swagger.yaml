definitions:
  models.Branch:
    properties:
      address:
        type: string
      id:
        type: integer
      name:
        type: integer
      theatres:
        items:
          $ref: '#/definitions/models.Theatre'
        type: array
    type: object
  models.BranchResponse:
    properties:
      data:
        $ref: '#/definitions/models.Branch'
      message:
        type: string
      status:
        type: integer
    type: object
  models.BranchesResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.Branch'
        type: array
      message:
        type: string
      status:
        type: integer
    type: object
  models.Customer:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
      phone:
        type: string
      username:
        type: string
    type: object
  models.CustomerResponse:
    properties:
      data:
        $ref: '#/definitions/models.Customer'
      message:
        type: string
      status:
        type: integer
    type: object
  models.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  models.Movie:
    properties:
      description:
        type: string
      duration:
        type: integer
      id:
        type: integer
      rating:
        type: number
      releaseDate:
        type: string
      title:
        type: integer
    type: object
  models.MovieResponse:
    properties:
      data:
        $ref: '#/definitions/models.Movie'
      message:
        type: string
      status:
        type: integer
    type: object
  models.MoviesResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.Movie'
        type: array
      message:
        type: string
      status:
        type: integer
    type: object
  models.Payment:
    properties:
      amount:
        type: integer
      id:
        type: integer
      status:
        $ref: '#/definitions/models.PaymentStatus'
    type: object
  models.PaymentStatus:
    enum:
    - Pending
    - Completed
    - Expired
    type: string
    x-enum-varnames:
    - Pending
    - Completed
    - Expired
  models.Response:
    properties:
      message:
        type: string
      status:
        type: integer
    type: object
  models.Schedule:
    properties:
      branch:
        $ref: '#/definitions/models.Branch'
      id:
        type: integer
      movie:
        $ref: '#/definitions/models.Movie'
      price:
        type: integer
      seats:
        items:
          $ref: '#/definitions/models.Seat'
        type: array
      showtime:
        type: string
    type: object
  models.ScheduleResponse:
    properties:
      data:
        $ref: '#/definitions/models.Schedule'
      message:
        type: string
      status:
        type: integer
    type: object
  models.SchedulesResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.Schedule'
        type: array
      message:
        type: string
      status:
        type: integer
    type: object
  models.Seat:
    properties:
      availability:
        type: boolean
      id:
        type: integer
      number:
        type: string
      row:
        type: string
    type: object
  models.Theatre:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  models.Ticket:
    properties:
      id:
        type: integer
      payment:
        $ref: '#/definitions/models.Payment'
      schedule:
        $ref: '#/definitions/models.Schedule'
      seat:
        $ref: '#/definitions/models.Seat'
    type: object
  models.TicketResponse:
    properties:
      data:
        $ref: '#/definitions/models.Ticket'
      message:
        type: string
      status:
        type: integer
    type: object
  models.TicketsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.Ticket'
        type: array
      message:
        type: string
      status:
        type: integer
    type: object
info:
  contact: {}
paths:
  /branches:
    get:
      consumes:
      - application/json
      description: Get a branches by movie_id and branches_id.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BranchesResponse'
      summary: Get branches
      tags:
      - Admin
    post:
      consumes:
      - application/json
      description: Create a new branch with the given details
      parameters:
      - description: Branch details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Branch'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BranchResponse'
      summary: Create a new branch
      tags:
      - Admin
  /branches/{branchId}:
    delete:
      description: Delete Branch by ID
      parameters:
      - description: Branch ID
        in: path
        name: branchId
        required: true
        type: integer
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/models.Response'
      summary: Delete Branch
      tags:
      - Admin
    get:
      consumes:
      - application/json
      description: Get a branche by movie_id and branche_id.
      parameters:
      - description: branch id
        in: path
        name: branchId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BranchesResponse'
      summary: Get branche
      tags:
      - Admin
    put:
      consumes:
      - application/json
      description: Update an existing branch with the given details
      parameters:
      - description: Branch ID
        in: path
        name: branchId
        required: true
        type: string
      - description: Branch details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Branch'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BranchResponse'
      summary: Update an existing branch
      tags:
      - Admin
  /branches/{branchId}/theatres:
    post:
      consumes:
      - application/json
      description: Create a new Theatre in a Branch
      parameters:
      - description: Branch ID
        in: path
        name: branchId
        required: true
        type: integer
      - description: Theatre details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Theatre'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BranchResponse'
      summary: Create Theatre
      tags:
      - Admin
  /branches/{branchId}/theatres/{theatreId}:
    delete:
      description: Delete a Theatre in a Branch by ID
      parameters:
      - description: Branch ID
        in: path
        name: branchId
        required: true
        type: integer
      - description: Theatre ID
        in: path
        name: theatreId
        required: true
        type: integer
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/models.Response'
      summary: Delete Theatre
      tags:
      - Admin
    put:
      consumes:
      - application/json
      description: Update a Theatre in a Branch by ID
      parameters:
      - description: Branch ID
        in: path
        name: branchId
        required: true
        type: integer
      - description: Theatre ID
        in: path
        name: theatreId
        required: true
        type: integer
      - description: Theatre details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Theatre'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BranchResponse'
      summary: Update Theatre
      tags:
      - Admin
  /customer/{customerId}/profile:
    get:
      consumes:
      - application/json
      description: get Account
      parameters:
      - description: Customer ID
        in: path
        name: customerId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CustomerResponse'
      summary: Get Customer
      tags:
      - Customer
    put:
      consumes:
      - application/json
      description: Put Customer Account
      parameters:
      - description: Customer ID
        in: path
        name: customerId
        required: true
        type: integer
      - description: Customer details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Customer'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CustomerResponse'
      summary: Update Customer
      tags:
      - Customer
  /customer/{customerId}/ticket/{ticketId}:
    get:
      consumes:
      - application/json
      description: Get payment
      parameters:
      - description: Customer ID
        in: path
        name: customerId
        required: true
        type: integer
      - description: Customer ID
        in: path
        name: ticketId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TicketResponse'
      summary: Get Payment
      tags:
      - Customer
  /customer/{customerId}/ticket/{ticketId}/payment:
    post:
      consumes:
      - application/json
      description: Confirm payment with payment_id.
      parameters:
      - description: Customer ID
        in: path
        name: customerId
        required: true
        type: integer
      - description: payment id
        in: path
        name: ticketId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TicketResponse'
      summary: Confirm Payment
      tags:
      - Customer
  /customer/{customerId}/tickets:
    get:
      consumes:
      - application/json
      description: Get all payments
      parameters:
      - description: Customer ID
        in: path
        name: customerId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TicketsResponse'
      summary: Get Payments
      tags:
      - Customer
  /customer/auth/login:
    post:
      consumes:
      - application/json
      description: Login Customer Account
      parameters:
      - description: Login details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CustomerResponse'
      summary: Login Customer
      tags:
      - Customer
  /customer/registration:
    post:
      consumes:
      - application/json
      description: Create New Customer Account
      parameters:
      - description: Customer details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Customer'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CustomerResponse'
      summary: Create New Customer
      tags:
      - Customer
  /movies:
    get:
      consumes:
      - application/json
      description: Get All Movies sorted by realse date
      parameters:
      - description: Filter movies by show time
        in: query
        name: show_time
        type: string
      - description: Filter movies by branch
        in: query
        name: branch
        type: string
      - description: Filter movies by rating
        in: query
        name: rating
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.MoviesResponse'
      summary: Get Movies
      tags:
      - Guest
    post:
      consumes:
      - application/json
      description: Create a new movie
      parameters:
      - description: Movie details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Movie'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.MovieResponse'
      summary: Create Movie
      tags:
      - Admin
  /movies/{movie_id}:
    get:
      consumes:
      - application/json
      description: Get a movie by ID
      parameters:
      - description: Movie ID
        in: path
        name: movie_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Movie'
      summary: Get a movie by ID
      tags:
      - Guest
  /movies/{movieId}:
    delete:
      description: Delete a movie by ID
      parameters:
      - description: Movie ID
        in: path
        name: movieId
        required: true
        type: string
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/models.Response'
      summary: Delete a movie
      tags:
      - Admin
    put:
      consumes:
      - application/json
      description: Update an existing movie
      parameters:
      - description: Movie ID
        in: path
        name: movieId
        required: true
        type: string
      - description: Movie details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Movie'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.MovieResponse'
      summary: Update Movie
      tags:
      - Admin
  /movies/{movieId}/schedule/{scheduleId}:
    delete:
      description: Delete a specific movie schedule by id
      parameters:
      - description: Movie ID
        in: path
        name: movieId
        required: true
        type: string
      - description: Schedule ID
        in: path
        name: scheduleId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/models.Response'
      summary: Delete movie schedule
      tags:
      - Admin
    put:
      description: Update a schedule for a movie
      parameters:
      - description: Movie ID
        in: path
        name: movieId
        required: true
        type: string
      - description: Schedule ID
        in: path
        name: scheduleId
        required: true
        type: string
      - description: Schedule details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Schedule'
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/models.ScheduleResponse'
      summary: Update a movie schedule
      tags:
      - Admin
  /movies/{movieId}/schedules:
    get:
      consumes:
      - application/json
      description: Get a schedule by movie_id and schedule_id.
      parameters:
      - description: movie id
        in: path
        name: movieId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SchedulesResponse'
      summary: Get Schedule
      tags:
      - Customer
  /movies/{movieId}/schedules/{scheduleId}:
    get:
      consumes:
      - application/json
      description: Get all schedules for a movie by ID
      parameters:
      - description: Movie ID
        in: path
        name: movieId
        required: true
        type: string
      - description: Schedule ID
        in: path
        name: scheduleId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ScheduleResponse'
      summary: Get all schedules for a movie by ID
      tags:
      - Customer
    post:
      description: Create a schedule for a movie
      parameters:
      - description: Movie ID
        in: path
        name: movieId
        required: true
        type: string
      - description: Schedule ID
        in: path
        name: scheduleId
        required: true
        type: string
      - description: Schedule details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Schedule'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ScheduleResponse'
      summary: Create a movie schedule
      tags:
      - Admin
  /movies/search:
    get:
      consumes:
      - application/json
      description: Search movies by title and genre
      parameters:
      - description: Movie title to search
        in: query
        name: title
        type: string
      - description: Movie genre to search
        in: query
        name: genre
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.MoviesResponse'
      summary: Search movies by title and genre
      tags:
      - Guest
swagger: "2.0"
